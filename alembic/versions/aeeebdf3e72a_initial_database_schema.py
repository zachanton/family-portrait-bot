"""Initial database schema

Revision ID: aeeebdf3e72a
Revises: 
Create Date: 2025-09-15 16:18:03.188519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aeeebdf3e72a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('language_code', sa.String(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('referral_source', sa.String(length=100), nullable=True),
    sa.Column('has_used_free_trial', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_table('generation_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('request_parameters', sa.JSON(), nullable=True),
    sa.Column('referral_source_at_creation', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generation_requests_status'), 'generation_requests', ['status'], unique=False)
    op.create_index(op.f('ix_generation_requests_user_id'), 'generation_requests', ['user_id'], unique=False)
    op.create_table('generation_source_images',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('file_unique_id', sa.String(), nullable=False),
    sa.Column('file_id', sa.String(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['generation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generation_source_images_request_id'), 'generation_source_images', ['request_id'], unique=False)
    op.create_table('generations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('quality_level', sa.Integer(), nullable=True),
    sa.Column('trial_type', sa.String(length=50), nullable=True),
    sa.Column('seed', sa.BigInteger(), nullable=True),
    sa.Column('style', sa.String(length=50), nullable=True),
    sa.Column('result_image_unique_id', sa.String(), nullable=True),
    sa.Column('result_message_id', sa.BigInteger(), nullable=True),
    sa.Column('result_file_id', sa.String(), nullable=True),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('control_message_id', sa.BigInteger(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('api_request_payload', sa.JSON(), nullable=True),
    sa.Column('api_response_payload', sa.JSON(), nullable=True),
    sa.Column('enhanced_prompt', sa.Text(), nullable=True),
    sa.Column('sequence_index', sa.Integer(), nullable=True, comment='The 0-indexed position of this image in a photoshoot sequence.'),
    sa.Column('source_generation_id', sa.Integer(), nullable=True, comment='The ID of the previous generation in the sequence, used as a source.'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['generation_requests.id'], ),
    sa.ForeignKeyConstraint(['source_generation_id'], ['generations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generations_request_id'), 'generations', ['request_id'], unique=False)
    op.create_index(op.f('ix_generations_status'), 'generations', ['status'], unique=False)
    op.create_index(op.f('ix_generations_trial_type'), 'generations', ['trial_type'], unique=False)
    op.create_index(op.f('ix_generations_type'), 'generations', ['type'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('telegram_charge_id', sa.String(), nullable=False),
    sa.Column('provider_charge_id', sa.String(), nullable=False),
    sa.Column('currency', sa.String(length=5), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('invoice_payload', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['generation_requests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_charge_id')
    )
    op.create_index(op.f('ix_payments_request_id'), 'payments', ['request_id'], unique=True)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_generation_id'), 'feedback', ['generation_id'], unique=True)
    op.create_index(op.f('ix_feedback_user_id'), 'feedback', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedback_user_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_generation_id'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_request_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_generations_type'), table_name='generations')
    op.drop_index(op.f('ix_generations_trial_type'), table_name='generations')
    op.drop_index(op.f('ix_generations_status'), table_name='generations')
    op.drop_index(op.f('ix_generations_request_id'), table_name='generations')
    op.drop_table('generations')
    op.drop_index(op.f('ix_generation_source_images_request_id'), table_name='generation_source_images')
    op.drop_table('generation_source_images')
    op.drop_index(op.f('ix_generation_requests_user_id'), table_name='generation_requests')
    op.drop_index(op.f('ix_generation_requests_status'), table_name='generation_requests')
    op.drop_table('generation_requests')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
